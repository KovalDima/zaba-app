{"version":3,"file":"static/js/Cart.fb0a5b7d.chunk.js","mappings":"wIAGA,MAQA,EARaA,KAETC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,UAAU,YAAYC,GAAG,IAAGC,SAAC,Q,oDCsBvC,MACA,EAAe,IAA0B,yD,aCxBzC,MAQA,EARaC,KAETL,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACE,GAAG,IAAID,UAAU,OAAOI,MAAM,aAAYF,UAC9CJ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAYK,IAAKC,EAAUC,IAAI,OAAOC,MAAM,U,oFCHjE,MAkDA,EAlDiBC,IAAqD,IAApD,GAAEC,EAAE,KAAEC,EAAI,MAAEC,EAAK,MAAEC,EAAK,KAAEC,EAAI,MAAEC,EAAK,MAAEC,GAAOP,EAC9D,MAAMQ,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,WAA2B,IAA1BH,EAAKI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGR,EAAKQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC5CH,GAASM,EAAAA,EAAAA,IAAgB,CAAEC,KAAM,CAAEd,KAAIM,QAAOJ,WAChD,EAEA,OACEa,EAAAA,EAAAA,MAAA,MAAIzB,UAAU,aAAaU,GAAIA,EAAGR,SAAA,EAChCuB,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,mBAAkBE,SAAA,EAC/BJ,EAAAA,EAAAA,KAAA,OACEO,IAAKQ,EACLN,IAAG,GAAAmB,OAAKf,EAAI,KAAAe,OAAIX,EAAK,KAAAW,OAAIZ,GACzBd,UAAU,oBAEZyB,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,kBAAiBE,SAAA,EAC9BJ,EAAAA,EAAAA,KAAA,MAAIE,UAAU,kBAAiBE,SAAES,KACjCc,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,sBAAqBE,SAAA,EAClCJ,EAAAA,EAAAA,KAAA,UACE6B,QAASA,IAAMR,GAAmB,GAAIP,GACtCZ,UAAU,sBAEZF,EAAAA,EAAAA,KAAA,QAAAI,SAAOc,KACPlB,EAAAA,EAAAA,KAAA,UACE6B,QAASA,IAAMR,EAAkB,EAAGP,GACpCZ,UAAU,8BAKlByB,EAAAA,EAAAA,MAAA,OAAAvB,SAAA,EACEuB,EAAAA,EAAAA,MAAA,KAAGzB,UAAU,yBAAwBE,SAAA,CAAC,IAAEU,EAAQI,MAChDS,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,qBAAoBE,SAAA,EACjCJ,EAAAA,EAAAA,KAAA,UACE6B,QAASA,IAAMR,GAAmBH,GAAQJ,EAAQI,GAClDhB,UAAU,cAAaE,SACxB,YAGDJ,EAAAA,EAAAA,KAAA,OACEE,UAAU,mBACV4B,MAAO,CAAEC,WAAsB,UAAVd,EAAoB,UAAYA,MAEvDjB,EAAAA,EAAAA,KAAA,QAAME,UAAU,kBAAiBE,SAAEY,YAGpC,E,mBC0HT,MACA,EAAe,IAA0B,8DC1JzC,EAfkBgB,KAEdL,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAA7B,SAAA,EACEJ,EAAAA,EAAAA,KAAA,KAAGE,UAAU,gBAAeE,SAAC,UAC7BuB,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,aAAYE,SAAA,EACzBJ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kBAAkBK,IAAK2B,EAAUzB,IAAI,MACpDT,EAAAA,EAAAA,KAAA,KAAGE,UAAU,mBAAkBE,SAAC,uCAChCJ,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACE,GAAG,IAAID,UAAU,MAAKE,SAAC,iC,qBCJrC,MA0CA,EA1Ca+B,KACX,MAAMhB,GAAWC,EAAAA,EAAAA,OAEX,MAAEgB,EAAK,WAAEC,EAAU,WAAEC,IAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAChDC,EAAWC,OAAOC,OAAOP,GAE/B,OACET,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAA7B,SAAA,EACEJ,EAAAA,EAAAA,KAACK,EAAAA,EAAI,KACLL,EAAAA,EAAAA,KAACD,EAAAA,EAAI,IACJuC,GACCX,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,OAAME,SAAA,EACnBuB,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,aAAYE,SAAA,EACzBuB,EAAAA,EAAAA,MAAA,KAAGzB,UAAU,gBAAeE,SAAA,CAAC,SAAOkC,EAAW,QAC/CtC,EAAAA,EAAAA,KAAA,UACE6B,QAASA,IAAMV,GAASyB,EAAAA,EAAAA,OACxB1C,UAAU,cAAaE,SACxB,kBAIHJ,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYE,SACvBqC,EAASI,KAAKnB,IACb1B,EAAAA,EAAAA,KAAC8C,GAAQC,EAAAA,EAAAA,GAAA,GAAmBrB,GAAbA,EAAKd,SAGxBZ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcE,UAC3BJ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWE,UACxBuB,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,uBAAsBE,SAAA,EACnCuB,EAAAA,EAAAA,MAAA,KAAGzB,UAAU,oBAAmBE,SAAA,CAAC,IAAEiC,EAAW,aAC9CrC,EAAAA,EAAAA,KAAA,UAAQE,UAAU,MAAKE,SAAC,uBAMhCJ,EAAAA,EAAAA,KAACgC,EAAS,MAEX,C","sources":["components/back/Back.js","assets/icons/zaba.svg","components/logo/Logo.js","components/cart-item/CartItem.js","assets/icons/no-orders.svg","components/cart-empty/CartEmpty.js","pages/Cart.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport \"./back.scss\";\r\n\r\nconst Back = () => {\r\n  return (\r\n    <Link className=\"back-link\" to=\"/\">\r\n      Back\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Back;\r\n","var _path;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgZaba(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 63,\n    height: 16,\n    viewBox: \"0 0 63 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.78125 15L0.576172 14.4629V14.4434H0.595703L10.2637 1.5625H4.92188C4.57031 1.5625 4.20573 1.5918 3.82812 1.65039C3.45703 1.70247 3.10872 1.80664 2.7832 1.96289C2.45768 2.11263 2.17448 2.32422 1.93359 2.59766C1.69271 2.87109 1.52669 3.22591 1.43555 3.66211L1.10352 3.60352C1.10352 3.57747 1.10026 3.47656 1.09375 3.30078C1.08724 3.125 1.06771 2.91016 1.03516 2.65625C1.0026 2.40234 0.950521 2.12891 0.878906 1.83594C0.807292 1.53646 0.70638 1.25651 0.576172 0.996094H13.2031L13.3984 1.5625L3.64258 14.4434H9.08203C9.43359 14.4434 9.79492 14.4173 10.166 14.3652C10.5371 14.3066 10.8854 14.2025 11.2109 14.0527C11.5365 13.8965 11.8197 13.6816 12.0605 13.4082C12.3014 13.1348 12.4674 12.7799 12.5586 12.3438L12.9004 12.4023C12.9004 12.4284 12.9036 12.5293 12.9102 12.7051C12.9167 12.8809 12.9362 13.0957 12.9688 13.3496C13.0013 13.6035 13.0501 13.877 13.1152 14.1699C13.1868 14.4629 13.2878 14.7396 13.418 15H0.78125ZM31.0059 14.4824C30.4134 14.7233 29.873 14.8861 29.3848 14.9707C28.8965 15.0553 28.457 15.0977 28.0664 15.0977C27.7539 15.0977 27.4837 15.0781 27.2559 15.0391C27.028 15.0065 26.8327 14.9642 26.6699 14.9121C26.4811 14.8535 26.3184 14.7884 26.1816 14.7168C25.8952 14.554 25.6445 14.3424 25.4297 14.082C25.2148 13.8216 25.0195 13.5417 24.8438 13.2422C24.6745 12.9427 24.5215 12.6335 24.3848 12.3145C24.248 11.9954 24.1146 11.696 23.9844 11.416L23.7402 10.8984C23.0827 11.0872 22.4674 11.3053 21.8945 11.5527C21.3281 11.7936 20.8236 12.0345 20.3809 12.2754C19.9382 12.5098 19.5638 12.7279 19.2578 12.9297C18.9583 13.125 18.7467 13.2682 18.623 13.3594C18.3822 13.6263 18.112 13.8639 17.8125 14.0723C17.513 14.2806 17.1777 14.4596 16.8066 14.6094C16.4355 14.7526 16.0221 14.8633 15.5664 14.9414C15.1107 15.0195 14.6094 15.0586 14.0625 15.0586L13.9648 14.6387C14.5964 14.5345 15.14 14.3327 15.5957 14.0332C16.0579 13.7337 16.4551 13.3659 16.7871 12.9297C17.1191 12.487 17.4023 11.9922 17.6367 11.4453C17.8711 10.8919 18.0794 10.3092 18.2617 9.69727C18.3659 9.3457 18.5026 8.97461 18.6719 8.58398C18.8477 8.19336 19.056 7.81576 19.2969 7.45117C19.5443 7.08008 19.8242 6.73503 20.1367 6.41602C20.4557 6.09049 20.8171 5.81706 21.2207 5.5957C21.11 5.38737 20.9993 5.17578 20.8887 4.96094C20.7845 4.73958 20.6836 4.51823 20.5859 4.29688C20.4492 4.03646 20.3125 3.75 20.1758 3.4375C20.0391 3.11849 19.8763 2.82552 19.6875 2.55859C19.5052 2.28516 19.2871 2.05729 19.0332 1.875C18.7858 1.69271 18.4766 1.60156 18.1055 1.60156C17.8451 1.60156 17.5879 1.63086 17.334 1.68945C17.0866 1.74805 16.849 1.81966 16.6211 1.9043L16.4844 1.50391C17.0508 1.3151 17.6237 1.1556 18.2031 1.02539C18.7891 0.888672 19.3685 0.820312 19.9414 0.820312C20.2148 0.820312 20.485 0.839844 20.752 0.878906C21.0189 0.911458 21.276 0.973307 21.5234 1.06445C21.7383 1.14258 21.9466 1.27279 22.1484 1.45508C22.3503 1.63086 22.5423 1.84245 22.7246 2.08984C22.9069 2.33073 23.0762 2.59115 23.2324 2.87109C23.3952 3.15104 23.5449 3.43099 23.6816 3.71094C23.8249 3.99089 23.9518 4.25781 24.0625 4.51172C24.1797 4.75911 24.2806 4.97396 24.3652 5.15625C24.9382 6.38672 25.5078 7.62044 26.0742 8.85742C26.6406 10.0879 27.2493 11.3021 27.9004 12.5C28.0176 12.7148 28.1413 12.9264 28.2715 13.1348C28.4082 13.3431 28.5579 13.5286 28.7207 13.6914C28.89 13.8542 29.0755 13.9844 29.2773 14.082C29.4792 14.1797 29.707 14.2253 29.9609 14.2188C30.0521 14.2188 30.1758 14.209 30.332 14.1895C30.4948 14.1699 30.6706 14.1211 30.8594 14.043L31.0059 14.4824ZM21.7676 6.71875C21.5983 6.99219 21.4421 7.27539 21.2988 7.56836C21.1621 7.86133 21.0352 8.16081 20.918 8.4668C20.8008 8.76628 20.6934 9.06576 20.5957 9.36523C20.498 9.66471 20.4004 9.95117 20.3027 10.2246C20.2051 10.5241 20.0977 10.8171 19.9805 11.1035C19.8698 11.3835 19.7428 11.6569 19.5996 11.9238C20.0879 11.6374 20.6608 11.3379 21.3184 11.0254C21.9759 10.7129 22.679 10.446 23.4277 10.2246L21.7676 6.71875ZM43.1836 4.16016C43.1836 4.51823 43.0892 4.86654 42.9004 5.20508C42.7181 5.54362 42.4707 5.86263 42.1582 6.16211C41.8457 6.45508 41.4811 6.72526 41.0645 6.97266C40.6478 7.21354 40.2083 7.42188 39.7461 7.59766C39.8177 7.58464 39.8893 7.57812 39.9609 7.57812C40.0391 7.57812 40.1139 7.57812 40.1855 7.57812C40.7259 7.57812 41.2598 7.6237 41.7871 7.71484C42.321 7.80599 42.7995 7.97526 43.2227 8.22266C43.6458 8.46354 43.9876 8.79557 44.248 9.21875C44.5085 9.64193 44.6387 10.1823 44.6387 10.8398C44.6387 11.3542 44.5638 11.8132 44.4141 12.2168C44.2708 12.6204 44.069 12.9785 43.8086 13.291C43.5547 13.6035 43.2585 13.8737 42.9199 14.1016C42.5814 14.3229 42.2201 14.5117 41.8359 14.668C41.4518 14.8242 41.0547 14.9479 40.6445 15.0391C40.2344 15.1367 39.834 15.2116 39.4434 15.2637C39.0527 15.3158 38.6784 15.3516 38.3203 15.3711C37.9688 15.3906 37.6562 15.4004 37.3828 15.4004C37.1094 15.4004 36.8262 15.3906 36.5332 15.3711C36.2402 15.3581 35.9473 15.3385 35.6543 15.3125C35.3613 15.2865 35.0716 15.2572 34.7852 15.2246C34.5052 15.1921 34.2383 15.1562 33.9844 15.1172C33.3854 15.0326 32.7995 14.9349 32.2266 14.8242L32.3242 2.74414C32.3242 2.60742 32.3014 2.45768 32.2559 2.29492C32.2103 2.13216 32.1224 1.98242 31.9922 1.8457C31.8685 1.70898 31.6927 1.59505 31.4648 1.50391C31.237 1.40625 30.9375 1.35742 30.5664 1.35742V0.996094H37.0996C38.0241 0.996094 38.8607 1.03516 39.6094 1.11328C40.3581 1.19141 40.9961 1.3444 41.5234 1.57227C42.0573 1.80013 42.4674 2.1224 42.7539 2.53906C43.0404 2.94922 43.1836 3.48958 43.1836 4.16016ZM39.9219 4.14062C39.9219 3.63281 39.8405 3.21289 39.6777 2.88086C39.515 2.54883 39.3001 2.28516 39.0332 2.08984C38.7663 1.89453 38.4635 1.75781 38.125 1.67969C37.7865 1.60156 37.4447 1.5625 37.0996 1.5625C36.748 1.5625 36.4583 1.60156 36.2305 1.67969C36.0091 1.7513 35.8333 1.84896 35.7031 1.97266C35.5794 2.09635 35.4948 2.23958 35.4492 2.40234C35.4036 2.5651 35.3809 2.73763 35.3809 2.91992L35.3418 14.2578C35.5632 14.375 35.8138 14.4759 36.0938 14.5605C36.3346 14.6387 36.6211 14.7103 36.9531 14.7754C37.2852 14.834 37.6562 14.8633 38.0664 14.8633C38.4245 14.8633 38.8118 14.8014 39.2285 14.6777C39.6452 14.5475 40.0326 14.3522 40.3906 14.0918C40.7487 13.8249 41.0449 13.4896 41.2793 13.0859C41.5202 12.6758 41.6406 12.194 41.6406 11.6406C41.6406 11.1784 41.582 10.778 41.4648 10.4395C41.3477 10.0944 41.1882 9.80143 40.9863 9.56055C40.7845 9.31315 40.5534 9.11133 40.293 8.95508C40.0326 8.79883 39.7559 8.67839 39.4629 8.59375C39.1764 8.5026 38.8835 8.44076 38.584 8.4082C38.291 8.37565 38.0111 8.35938 37.7441 8.35938C37.5358 8.35938 37.3405 8.36914 37.1582 8.38867C36.9759 8.40169 36.8164 8.41471 36.6797 8.42773C36.5169 8.45378 36.3704 8.47656 36.2402 8.49609L36.084 8.11523C36.8001 8.0306 37.4382 7.83203 37.998 7.51953C38.2389 7.38932 38.4733 7.22656 38.7012 7.03125C38.929 6.83594 39.1341 6.60156 39.3164 6.32812C39.4987 6.05469 39.6452 5.73893 39.7559 5.38086C39.8665 5.01628 39.9219 4.60286 39.9219 4.14062ZM62.1973 14.4824C61.6048 14.7233 61.0645 14.8861 60.5762 14.9707C60.0879 15.0553 59.6484 15.0977 59.2578 15.0977C58.9453 15.0977 58.6751 15.0781 58.4473 15.0391C58.2194 15.0065 58.0241 14.9642 57.8613 14.9121C57.6725 14.8535 57.5098 14.7884 57.373 14.7168C57.0866 14.554 56.8359 14.3424 56.6211 14.082C56.4062 13.8216 56.2109 13.5417 56.0352 13.2422C55.8659 12.9427 55.7129 12.6335 55.5762 12.3145C55.4395 11.9954 55.306 11.696 55.1758 11.416L54.9316 10.8984C54.2741 11.0872 53.6589 11.3053 53.0859 11.5527C52.5195 11.7936 52.015 12.0345 51.5723 12.2754C51.1296 12.5098 50.7552 12.7279 50.4492 12.9297C50.1497 13.125 49.9382 13.2682 49.8145 13.3594C49.5736 13.6263 49.3034 13.8639 49.0039 14.0723C48.7044 14.2806 48.3691 14.4596 47.998 14.6094C47.627 14.7526 47.2135 14.8633 46.7578 14.9414C46.3021 15.0195 45.8008 15.0586 45.2539 15.0586L45.1562 14.6387C45.7878 14.5345 46.3314 14.3327 46.7871 14.0332C47.2493 13.7337 47.6465 13.3659 47.9785 12.9297C48.3105 12.487 48.5938 11.9922 48.8281 11.4453C49.0625 10.8919 49.2708 10.3092 49.4531 9.69727C49.5573 9.3457 49.694 8.97461 49.8633 8.58398C50.0391 8.19336 50.2474 7.81576 50.4883 7.45117C50.7357 7.08008 51.0156 6.73503 51.3281 6.41602C51.6471 6.09049 52.0085 5.81706 52.4121 5.5957C52.3014 5.38737 52.1908 5.17578 52.0801 4.96094C51.9759 4.73958 51.875 4.51823 51.7773 4.29688C51.6406 4.03646 51.5039 3.75 51.3672 3.4375C51.2305 3.11849 51.0677 2.82552 50.8789 2.55859C50.6966 2.28516 50.4785 2.05729 50.2246 1.875C49.9772 1.69271 49.668 1.60156 49.2969 1.60156C49.0365 1.60156 48.7793 1.63086 48.5254 1.68945C48.278 1.74805 48.0404 1.81966 47.8125 1.9043L47.6758 1.50391C48.2422 1.3151 48.8151 1.1556 49.3945 1.02539C49.9805 0.888672 50.5599 0.820312 51.1328 0.820312C51.4062 0.820312 51.6764 0.839844 51.9434 0.878906C52.2103 0.911458 52.4674 0.973307 52.7148 1.06445C52.9297 1.14258 53.138 1.27279 53.3398 1.45508C53.5417 1.63086 53.7337 1.84245 53.916 2.08984C54.0983 2.33073 54.2676 2.59115 54.4238 2.87109C54.5866 3.15104 54.7363 3.43099 54.873 3.71094C55.0163 3.99089 55.1432 4.25781 55.2539 4.51172C55.3711 4.75911 55.472 4.97396 55.5566 5.15625C56.1296 6.38672 56.6992 7.62044 57.2656 8.85742C57.832 10.0879 58.4408 11.3021 59.0918 12.5C59.209 12.7148 59.3327 12.9264 59.4629 13.1348C59.5996 13.3431 59.7493 13.5286 59.9121 13.6914C60.0814 13.8542 60.2669 13.9844 60.4688 14.082C60.6706 14.1797 60.8984 14.2253 61.1523 14.2188C61.2435 14.2188 61.3672 14.209 61.5234 14.1895C61.6862 14.1699 61.862 14.1211 62.0508 14.043L62.1973 14.4824ZM52.959 6.71875C52.7897 6.99219 52.6335 7.27539 52.4902 7.56836C52.3535 7.86133 52.2266 8.16081 52.1094 8.4668C51.9922 8.76628 51.8848 9.06576 51.7871 9.36523C51.6895 9.66471 51.5918 9.95117 51.4941 10.2246C51.3965 10.5241 51.2891 10.8171 51.1719 11.1035C51.0612 11.3835 50.9342 11.6569 50.791 11.9238C51.2793 11.6374 51.8522 11.3379 52.5098 11.0254C53.1673 10.7129 53.8704 10.446 54.6191 10.2246L52.959 6.71875Z\",\n    fill: \"black\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgZaba);\nexport default __webpack_public_path__ + \"static/media/zaba.5c21ef9164367c325ea96b91213bb33a.svg\";\nexport { ForwardRef as ReactComponent };","import { Link } from \"react-router-dom\";\r\nimport zabaLogo from \"../../assets/icons/zaba.svg\";\r\nimport \"./logo.scss\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <Link to=\"/\" className=\"logo\" title=\"Zaba Store\">\r\n      <img className=\"logo__img\" src={zabaLogo} alt=\"Zaba\" width=\"63px\" />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { changeItemCount } from \"../../store/slices/cartSlice\";\r\nimport \"./cart-item.scss\";\r\n\r\nconst CartItem = ({ id, name, price, image, size, color, count }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeItemCount = (count = 0, price = 0) => {\r\n    dispatch(changeItemCount({ item: { id, count, price } }));\r\n  };\r\n\r\n  return (\r\n    <li className=\"cart__item\" id={id}>\r\n      <div className=\"cart__item-inner\">\r\n        <img\r\n          src={image}\r\n          alt={`${name} ${color} ${size}`}\r\n          className=\"cart__item-img\"\r\n        />\r\n        <div className=\"cart__item-info\">\r\n          <h3 className=\"cart__item-name\">{name}</h3>\r\n          <div className=\"cart__item-quantity\">\r\n            <button\r\n              onClick={() => onChangeItemCount(-1, -price)}\r\n              className=\"cart__item-minus\"\r\n            ></button>\r\n            <span>{count}</span>\r\n            <button\r\n              onClick={() => onChangeItemCount(1, price)}\r\n              className=\"cart__item-plus\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <p className=\"price cart__item-price\">${price * count}</p>\r\n        <div className=\"cart__item-details\">\r\n          <button\r\n            onClick={() => onChangeItemCount(-count, -price * count)}\r\n            className=\"cart__clear\"\r\n          >\r\n            Delete\r\n          </button>\r\n          <div\r\n            className=\"cart__item-color\"\r\n            style={{ background: color === \"white\" ? \"#f4f4f4\" : color }}\r\n          ></div>\r\n          <span className=\"cart__item-size\">{size}</span>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","var _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgNoOrders(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 174,\n    height: 152,\n    viewBox: \"0 0 174 152\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"No Orders\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M118.551 150.775H41.2347C37.705 150.775 34.289 149.524 31.5902 147.244C28.8915 144.964 27.0838 141.801 26.4867 138.314L15.8618 76.2803H143.923L133.298 138.314C132.701 141.801 130.894 144.964 128.195 147.244C125.496 149.524 122.08 150.775 118.551 150.775Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M144.2 70.2964H15.5849C12.5363 70.2964 10.0649 72.7734 10.0649 75.8291C10.0649 78.8847 12.5363 81.3617 15.5849 81.3617H144.2C147.249 81.3617 149.72 78.8847 149.72 75.8291C149.72 72.7734 147.249 70.2964 144.2 70.2964Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_3\",\n    d: \"M144.202 81.7986H15.5849C14.0056 81.7986 12.4909 81.1697 11.3742 80.0504C10.2574 78.9311 9.63 77.4129 9.63 75.83C9.63 74.247 10.2574 72.7288 11.3742 71.6095C12.4909 70.4902 14.0056 69.8613 15.5849 69.8613H144.202C145.781 69.8613 147.296 70.4902 148.412 71.6095C149.529 72.7288 150.157 74.247 150.157 75.83C150.157 77.4129 149.529 78.9311 148.412 80.0504C147.296 81.1697 145.781 81.7986 144.202 81.7986ZM15.5863 70.7339C14.2379 70.7339 12.9447 71.2708 11.9912 72.2265C11.0377 73.1822 10.502 74.4784 10.502 75.83C10.502 77.1815 11.0377 78.4777 11.9912 79.4334C12.9447 80.3891 14.2379 80.926 15.5863 80.926H144.202C145.55 80.926 146.843 80.3891 147.797 79.4334C148.75 78.4777 149.286 77.1815 149.286 75.83C149.286 74.4784 148.75 73.1822 147.797 72.2265C146.843 71.2708 145.55 70.7339 144.202 70.7339H15.5863Z\",\n    fill: \"#757575\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_3\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_4\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_5\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_4\",\n    d: \"M96.9231 72.4338C95.4853 74.2457 95.7851 76.8829 97.5928 78.3241C99.4006 79.7653 102.032 79.4648 103.47 77.6529L128.085 46.6353C129.522 44.8234 129.223 42.1862 127.415 40.745C125.607 39.3038 122.976 39.6043 121.538 41.4162L96.9231 72.4338Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_5\",\n    d: \"M100.186 79.6735C99.1448 79.6741 98.1341 79.3189 97.321 78.6665C96.3637 77.9016 95.7483 76.7874 95.6097 75.5682C95.4711 74.3491 95.8206 73.1246 96.5817 72.1635L121.196 41.1455C121.574 40.6699 122.041 40.2734 122.572 39.9787C123.102 39.684 123.685 39.497 124.288 39.4282C124.89 39.3594 125.5 39.4102 126.083 39.5778C126.666 39.7453 127.21 40.0263 127.685 40.4047C128.16 40.7831 128.555 41.2514 128.849 41.783C129.143 42.3147 129.33 42.8991 129.398 43.503C129.467 44.1069 129.416 44.7185 129.249 45.3027C129.082 45.887 128.802 46.4325 128.424 46.9082L103.81 77.9258C103.433 78.4027 102.966 78.8001 102.436 79.0948C101.905 79.3896 101.321 79.576 100.718 79.6431C100.542 79.6633 100.364 79.6734 100.186 79.6735ZM97.8628 77.9838C98.248 78.2909 98.6897 78.5189 99.1627 78.6548C99.6358 78.7908 100.131 78.832 100.62 78.7762C101.109 78.7203 101.582 78.5685 102.012 78.3294C102.443 78.0902 102.822 77.7684 103.128 77.3824L127.743 46.3644C128.049 45.9784 128.277 45.5358 128.412 45.0616C128.548 44.5875 128.589 44.0913 128.534 43.6012C128.478 43.1111 128.327 42.6368 128.088 42.2054C127.85 41.7739 127.529 41.3938 127.143 41.0867C126.758 40.7796 126.317 40.5515 125.844 40.4155C125.371 40.2795 124.876 40.2382 124.387 40.2939C123.898 40.3497 123.424 40.5014 122.994 40.7405C122.564 40.9796 122.184 41.3013 121.878 41.6872L97.2632 72.7049C96.6456 73.4848 96.3619 74.4784 96.4743 75.4677C96.5867 76.4571 97.0861 77.3613 97.8628 77.982V77.9838Z\",\n    fill: \"#757575\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_6\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_6\",\n    d: \"M99.9157 76.9764C100.786 76.9764 101.492 76.2691 101.492 75.3967C101.492 74.5242 100.786 73.8169 99.9157 73.8169C99.0453 73.8169 98.3396 74.5242 98.3396 75.3967C98.3396 76.2691 99.0453 76.9764 99.9157 76.9764Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_7\",\n    d: \"M99.9203 77.4133C99.6227 77.4135 99.3288 77.3476 99.0597 77.2203C98.7906 77.0931 98.5529 76.9076 98.3638 76.6774C98.1747 76.4471 98.0389 76.1777 97.966 75.8885C97.8932 75.5993 97.8852 75.2975 97.9426 75.0049C98.0168 74.6305 98.1955 74.285 98.4579 74.0085C98.7203 73.7319 99.0556 73.5357 99.4249 73.4427C99.7942 73.3496 100.182 73.3636 100.544 73.4829C100.906 73.6022 101.226 73.8219 101.468 74.1166C101.71 74.4113 101.863 74.7687 101.911 75.1474C101.958 75.5261 101.897 75.9105 101.735 76.2558C101.573 76.6011 101.316 76.8932 100.995 77.0981C100.674 77.303 100.301 77.4123 99.9203 77.4133ZM98.7969 75.1745C98.7454 75.4341 98.7853 75.7035 98.9099 75.9369C99.0344 76.1702 99.2358 76.3531 99.4798 76.4543C99.7237 76.5555 99.9952 76.5688 100.248 76.4919C100.5 76.415 100.719 76.2526 100.865 76.0325C101.012 75.8124 101.078 75.5482 101.052 75.2848C101.026 75.0215 100.91 74.7753 100.723 74.5883C100.536 74.4012 100.29 74.2849 100.027 74.2591C99.7647 74.2333 99.5011 74.2996 99.2816 74.4468C99.0303 74.6154 98.8559 74.8772 98.7969 75.1745Z\",\n    fill: \"#757575\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_7\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_8\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_8\",\n    d: \"M38.2479 41.4167C36.81 39.6048 34.1789 39.3043 32.3712 40.7455C30.5634 42.1867 30.2636 44.8238 31.7015 46.6357L56.3165 77.6533C57.7544 79.4652 60.3855 79.7657 62.1932 78.3245C64.001 76.8833 64.3008 74.2462 62.8629 72.4343L38.2479 41.4167Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_9\",\n    d: \"M59.5943 79.6706C58.8989 79.672 58.2122 79.5157 57.5855 79.2135C56.9589 78.9113 56.4086 78.4709 55.9757 77.9254L31.3606 46.9077C30.5982 45.9471 30.2478 44.7222 30.3864 43.5025C30.525 42.2829 31.1413 41.1684 32.0998 40.4042C33.0582 39.64 34.2803 39.2888 35.4972 39.4277C36.714 39.5666 37.826 40.1844 38.5884 41.1451L63.2035 72.163C63.7443 72.8439 64.0825 73.6639 64.1793 74.5289C64.2761 75.3938 64.1274 76.2685 63.7505 77.0525C63.3736 77.8366 62.7836 78.4982 62.0484 78.9613C61.3133 79.4244 60.4626 79.6702 59.5943 79.6706ZM34.9709 40.2721C34.2663 40.2726 33.5762 40.4723 32.9798 40.8481C32.3834 41.224 31.9048 41.7608 31.5989 42.3969C31.2931 43.0331 31.1725 43.7428 31.2509 44.4445C31.3293 45.1463 31.6035 45.8117 32.0422 46.3643L56.6569 77.3819C57.2762 78.1605 58.1783 78.6611 59.1654 78.7738C60.1524 78.8866 61.1438 78.6023 61.922 77.9833C62.3071 77.6763 62.6281 77.2963 62.8667 76.8649C63.1053 76.4336 63.2568 75.9593 63.3125 75.4693C63.3682 74.9793 63.3271 74.483 63.1915 74.0089C63.0558 73.5348 62.8283 73.0921 62.522 72.7061L37.9072 41.6885C37.556 41.2458 37.1094 40.8885 36.6009 40.6432C36.0924 40.398 35.5352 40.2711 34.9709 40.2721Z\",\n    fill: \"#757575\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_9\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_10\",\n    d: \"M59.8694 76.9769C60.7399 76.9769 61.4456 76.2696 61.4456 75.3971C61.4456 74.5247 60.7399 73.8174 59.8694 73.8174C58.9989 73.8174 58.2933 74.5247 58.2933 75.3971C58.2933 76.2696 58.9989 76.9769 59.8694 76.9769Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_11\",\n    d: \"M59.8653 77.4137C59.4843 77.413 59.1113 77.3039 58.7898 77.0991C58.4682 76.8943 58.2113 76.6021 58.0489 76.2567C57.8865 75.9112 57.8254 75.5266 57.8725 75.1477C57.9197 74.7688 58.0732 74.411 58.3153 74.1161C58.5574 73.8213 58.878 73.6013 59.2399 73.4819C59.6018 73.3625 59.9901 73.3486 60.3596 73.4418C60.7291 73.5349 61.0646 73.7313 61.327 74.0081C61.5895 74.2849 61.7682 74.6307 61.8423 75.0053C61.8997 75.2979 61.8918 75.5996 61.819 75.8888C61.7463 76.1779 61.6105 76.4474 61.4215 76.6776C61.2324 76.9079 60.9948 77.0934 60.7258 77.2206C60.4567 77.3479 60.1628 77.4138 59.8653 77.4137ZM59.8719 74.2535C59.6367 74.2529 59.407 74.3253 59.2144 74.4606C59.0217 74.596 58.8756 74.7877 58.7959 75.0095C58.7162 75.2314 58.7068 75.4725 58.7692 75.6999C58.8315 75.9272 58.9624 76.1297 59.144 76.2796C59.3256 76.4295 59.549 76.5195 59.7836 76.5372C60.0182 76.5549 60.2525 76.4994 60.4545 76.3785C60.6564 76.2575 60.8161 76.0769 60.9117 75.8615C61.0073 75.646 61.034 75.4062 60.9884 75.1749C60.937 74.9158 60.7977 74.6824 60.5942 74.5145C60.3907 74.3465 60.1355 74.2543 59.8719 74.2535Z\",\n    fill: \"#757575\"\n  })))), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_12\",\n    d: \"M83.1515 100.819C83.1515 99.0148 81.6923 97.5522 79.8924 97.5522C78.0925 97.5522 76.6334 99.0148 76.6334 100.819V131.703C76.6334 133.507 78.0925 134.969 79.8924 134.969C81.6923 134.969 83.1515 133.507 83.1515 131.703V100.819Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_13\",\n    d: \"M51.9962 100.501C51.7196 98.7183 50.0537 97.4978 48.2751 97.775C46.4966 98.0522 45.279 99.722 45.5556 101.505L50.2897 132.022C50.5662 133.804 52.2322 135.025 54.0107 134.748C55.7893 134.471 57.0069 132.801 56.7303 131.018L51.9962 100.501Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_14\",\n    d: \"M103.727 131.017C103.451 132.8 104.669 134.47 106.447 134.747C108.226 135.024 109.892 133.804 110.168 132.021L114.902 101.504C115.179 99.7215 113.961 98.0516 112.183 97.7744C110.404 97.4973 108.738 98.7177 108.462 100.5L103.727 131.017Z\",\n    fill: \"white\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_10\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_15\",\n    d: \"M63.8105 56.2486C63.7172 56.2486 63.6263 56.2195 63.5504 56.1652C63.4529 56.0961 63.3867 55.991 63.3666 55.8732C63.3465 55.7553 63.374 55.6343 63.4431 55.5368C63.5265 55.4191 71.6737 43.6407 62.5785 32.9028C60.9687 30.9924 58.9606 29.4571 56.6949 28.4046C54.4293 27.3521 51.9608 26.8078 49.4626 26.8098H49.34C50.2037 29.8103 50.0495 32.4781 48.8265 34.5247C48.3054 35.4496 47.5364 36.2105 46.6061 36.7218C45.6759 37.2331 44.6213 37.4745 43.5612 37.4188C42.6837 37.347 41.8462 37.0208 41.1513 36.4801C40.4564 35.9395 39.9342 35.208 39.6488 34.3751C38.6485 31.7659 39.6939 29.236 42.4491 27.6055C44.1946 26.6429 46.1341 26.0851 48.1242 25.9731C47.4768 24.2567 46.6349 22.62 45.6151 21.0951C42.331 16.0795 36.3458 12.6075 29.1935 11.5693C23.1321 10.6898 17.3231 11.7258 14.3925 14.2078C14.3012 14.2851 14.183 14.3229 14.0638 14.3129C13.9447 14.303 13.8344 14.2461 13.7571 14.1549C13.6799 14.0636 13.6421 13.9454 13.652 13.8262C13.6619 13.707 13.7188 13.5967 13.8101 13.5195C16.9287 10.8783 23.0176 9.76164 29.3229 10.6795C36.7308 11.7551 42.9437 15.3718 46.3697 20.6033C47.4804 22.2624 48.3839 24.0512 49.06 25.9299C51.755 25.8651 54.4301 26.4058 56.8884 27.5121C59.3467 28.6184 61.5254 30.2621 63.2642 32.3221C72.8179 43.6006 64.2636 55.9371 64.1761 56.0606C64.1344 56.1187 64.0796 56.166 64.016 56.1987C63.9524 56.2314 63.882 56.2485 63.8105 56.2486ZM48.4168 26.8427C46.4873 26.925 44.6028 27.4517 42.9103 28.3817C40.5319 29.7891 39.651 31.8565 40.4927 34.0528C40.7207 34.7257 41.14 35.3176 41.6991 35.756C42.2583 36.1945 42.9331 36.4604 43.641 36.5213C44.5324 36.5612 45.4173 36.3524 46.1967 35.9182C46.9762 35.484 47.6195 34.8416 48.0548 34.0627C49.1772 32.1828 49.28 29.6841 48.4154 26.8427H48.4168Z\",\n    fill: \"#292A2E\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_11\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_16\",\n    d: \"M6.61227 21.4759C5.84621 21.7061 5.02058 21.6281 4.31116 21.2586C3.60175 20.8891 3.0646 20.2572 2.81409 19.4976C2.56358 18.7379 2.6195 17.9105 2.96994 17.1915C3.32038 16.4724 3.93766 15.9186 4.69035 15.6479C5.44303 15.3772 6.27165 15.411 6.99978 15.7421C7.72791 16.0733 8.29802 16.6755 8.58872 17.4207C8.87942 18.1659 8.86774 18.9951 8.55618 19.7319C8.24462 20.4686 7.65778 21.0546 6.92062 21.365C6.81994 21.4076 6.717 21.4446 6.61227 21.4759ZM5.11338 16.4667C5.04036 16.4886 4.96858 16.5145 4.89835 16.5442C4.37967 16.7629 3.96686 17.1755 3.74785 17.694C3.52885 18.2126 3.52095 18.7962 3.72584 19.3205C3.93073 19.8448 4.33222 20.2683 4.84479 20.501C5.35737 20.7336 5.94052 20.757 6.47005 20.566C6.99959 20.3751 7.43365 19.985 7.67979 19.4787C7.92593 18.9725 7.9647 18.3902 7.78784 17.8558C7.61098 17.3214 7.23247 16.8771 6.73292 16.6177C6.23337 16.3582 5.65227 16.304 5.11338 16.4667Z\",\n    fill: \"#292A2E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_17\",\n    d: \"M6.60685 14.412C5.88219 14.6283 5.10312 14.5692 4.41943 14.2459C3.73574 13.9226 3.19569 13.358 2.90311 12.6606C2.66852 12.1015 2.605 11.4854 2.72058 10.8902C2.83616 10.2951 3.12564 9.74751 3.55243 9.31685C3.97921 8.88619 4.52412 8.59176 5.11824 8.4708C5.71236 8.34984 6.32901 8.40779 6.89019 8.63731C7.45138 8.86683 7.9319 9.25761 8.27099 9.76024C8.61007 10.2629 8.79248 10.8548 8.79516 11.4611C8.79783 12.0674 8.62065 12.6608 8.28602 13.1664C7.95138 13.672 7.47433 14.0671 6.91519 14.3015C6.8144 14.3437 6.71148 14.3805 6.60685 14.412ZM5.10975 9.40228C5.03586 9.42444 4.96318 9.45048 4.89202 9.48026C4.36318 9.7024 3.94417 10.1254 3.7271 10.6564C3.51002 11.1873 3.51264 11.7827 3.73438 12.3117C3.89609 12.6973 4.16608 13.0278 4.51168 13.2632C4.85728 13.4987 5.26369 13.6289 5.68175 13.6382C6.0998 13.6475 6.5116 13.5354 6.86732 13.3156C7.22304 13.0958 7.50744 12.7776 7.68614 12.3996C7.86483 12.0215 7.93015 11.5998 7.87419 11.1854C7.81824 10.771 7.64341 10.3817 7.37086 10.0645C7.0983 9.74739 6.7397 9.51603 6.33842 9.39842C5.93714 9.28081 5.51037 9.28199 5.10975 9.40182V9.40228Z\",\n    fill: \"#292A2E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_18\",\n    d: \"M5.73186 17.6002C7.94568 17.6002 9.74034 16.4015 9.74034 14.9229C9.74034 13.4443 7.94568 12.2456 5.73186 12.2456C3.51804 12.2456 1.72339 13.4443 1.72339 14.9229C1.72339 16.4015 3.51804 17.6002 5.73186 17.6002Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_19\",\n    d: \"M7.50616 17.7968C6.93146 17.9667 6.33516 18.0523 5.73588 18.0511C3.23487 18.0511 1.27301 16.6807 1.27301 14.9266C1.27301 13.1726 3.22901 11.7972 5.72912 11.7945C6.81913 11.7736 7.89154 12.0713 8.81482 12.651C9.22949 12.867 9.57703 13.1925 9.81971 13.5922C10.0624 13.9919 10.1909 14.4504 10.1913 14.9179C10.1918 15.3855 10.064 15.8443 9.82208 16.2443C9.58012 16.6444 9.23316 16.9706 8.81888 17.1874C8.41388 17.4544 7.97148 17.6598 7.50616 17.7968ZM4.23248 12.9107C3.02796 13.2713 2.17415 14.0498 2.1746 14.9244C2.1746 16.1311 3.80513 17.1495 5.73588 17.1477C6.64793 17.1669 7.54582 16.92 8.31984 16.4372C8.61014 16.3035 8.856 16.0894 9.02824 15.8201C9.20048 15.5509 9.29187 15.2379 9.29159 14.9183C9.29131 14.5987 9.19935 14.2859 9.02663 14.017C8.85391 13.748 8.60768 13.5343 8.31714 13.4011C7.54255 12.9194 6.64423 12.674 5.73228 12.6952C5.22454 12.6939 4.71931 12.7664 4.23248 12.9107Z\",\n    fill: \"#292A2E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_20\",\n    d: \"M6.71507 17.5183L6.6204 12.3116L5.32572 12.2593L5.23511 17.5791L6.71507 17.5183Z\",\n    fill: \"#292A2E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_21\",\n    d: \"M0.41383 16.0557C0.642382 16.0557 0.82766 15.8704 0.82766 15.6419C0.82766 15.4133 0.642382 15.228 0.41383 15.228C0.185278 15.228 0 15.4133 0 15.6419C0 15.8704 0.185278 16.0557 0.41383 16.0557Z\",\n    fill: \"#292A2E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_22\",\n    d: \"M0.737011 13.8413C0.965563 13.8413 1.15084 13.6561 1.15084 13.4275C1.15084 13.1989 0.965563 13.0137 0.737011 13.0137C0.508459 13.0137 0.323181 13.1989 0.323181 13.4275C0.323181 13.6561 0.508459 13.8413 0.737011 13.8413Z\",\n    fill: \"#292A2E\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_12\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_23\",\n    d: \"M96.8325 59.8499C96.736 59.8498 96.6421 59.8189 96.5645 59.7615C96.4869 59.7041 96.4298 59.6234 96.4015 59.5311C94.9063 53.9475 94.5073 48.1269 95.2267 42.3914C96.392 34.0066 101.016 23.0023 116.428 18.1837C118.596 17.4865 120.82 16.9766 123.076 16.6596C123.802 12.1241 126.565 7.20415 132.743 3.80966C147.422 -4.25597 157.337 2.98065 157.435 3.05458C157.531 3.12631 157.594 3.23311 157.611 3.35146C157.628 3.46982 157.597 3.59005 157.525 3.68569C157.454 3.78134 157.347 3.84457 157.228 3.86148C157.11 3.87839 156.99 3.84759 156.894 3.77585C156.8 3.70553 147.325 -3.17406 133.177 4.60036C127.405 7.77261 124.762 12.3256 124.01 16.5523C130.808 15.8829 134.063 18.1504 135.524 19.8629C136.428 20.8928 137.009 22.1659 137.195 23.5236C137.38 24.8812 137.162 26.2635 136.567 27.4981C136.098 28.4959 135.336 29.3279 134.384 29.8839C133.431 30.44 132.332 30.6941 131.232 30.6126C127.436 30.3899 124.294 27.1965 123.23 22.4767C122.878 20.8789 122.785 19.2353 122.953 17.6081C120.831 17.9129 118.739 18.394 116.697 19.0465C104.686 22.8021 97.7638 30.6996 96.1193 42.5181C95.4148 48.1234 95.8034 53.8122 97.2634 59.2697C97.2841 59.3371 97.2887 59.4084 97.2768 59.4779C97.2649 59.5474 97.2368 59.6131 97.1949 59.6698C97.153 59.7265 97.0984 59.7725 97.0354 59.8043C96.9725 59.836 96.903 59.8526 96.8325 59.8526V59.8499ZM123.872 17.4954C123.684 19.0916 123.764 20.708 124.109 22.2779C125.083 26.5956 127.9 29.5136 131.285 29.7124C132.208 29.7785 133.129 29.5642 133.927 29.0976C134.726 28.631 135.365 27.9339 135.76 27.0978C136.276 26.0212 136.463 24.8167 136.299 23.6345C136.135 22.4522 135.626 21.3444 134.837 20.449C132.729 17.9755 128.883 16.9765 123.872 17.4954Z\",\n    fill: \"#292A2E\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_13\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_24\",\n    d: \"M167.936 7.61054C167.329 7.60927 166.734 7.43633 166.221 7.11169C165.708 6.78705 165.297 6.32394 165.036 5.77581C164.775 5.22767 164.674 4.61686 164.745 4.01387C164.816 3.41088 165.057 2.84029 165.438 2.36795C165.82 1.89561 166.327 1.54079 166.902 1.34442C167.476 1.14805 168.094 1.11815 168.685 1.25816C169.276 1.39817 169.815 1.7024 170.241 2.13572C170.666 2.56904 170.96 3.11379 171.089 3.7071C171.19 4.17743 171.185 4.6644 171.073 5.13235C170.962 5.60031 170.747 6.0374 170.445 6.41163C170.142 6.78586 169.76 7.08775 169.326 7.29519C168.892 7.50264 168.417 7.61038 167.936 7.61054ZM167.943 2.07297C167.463 2.07296 166.996 2.22166 166.604 2.49859C166.213 2.77551 165.917 3.16702 165.757 3.61916C165.598 4.07129 165.582 4.5618 165.713 5.02307C165.844 5.48433 166.115 5.89366 166.488 6.19462C166.861 6.49558 167.319 6.67337 167.797 6.70348C168.276 6.73358 168.752 6.61453 169.16 6.36272C169.568 6.11091 169.888 5.73874 170.075 5.29751C170.263 4.85629 170.309 4.36772 170.208 3.89914C170.098 3.38072 169.812 2.91602 169.4 2.58338C168.987 2.25073 168.473 2.07047 167.943 2.07297Z\",\n    fill: \"#292A2E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_25\",\n    d: \"M166.579 14.9679C165.752 14.9679 164.958 14.6511 164.358 14.0827C163.758 13.5144 163.399 12.7377 163.355 11.9127C163.311 11.0876 163.584 10.277 164.12 9.64762C164.655 9.01824 165.411 8.61803 166.233 8.52939C167.054 8.44074 167.878 8.6704 168.535 9.17109C169.193 9.67177 169.633 10.4054 169.766 11.2209C169.898 12.0364 169.713 12.8717 169.249 13.5549C168.784 14.2382 168.075 14.7172 167.268 14.8936C167.042 14.943 166.81 14.9679 166.579 14.9679ZM166.59 9.42992C166.423 9.43 166.257 9.44798 166.094 9.48357C165.518 9.61004 165.013 9.9524 164.682 10.4402C164.351 10.928 164.219 11.5242 164.314 12.106C164.409 12.6879 164.724 13.2112 165.193 13.5682C165.662 13.9252 166.25 14.0889 166.836 14.0255C167.422 13.9621 167.962 13.6764 168.344 13.2273C168.726 12.7782 168.921 12.1998 168.89 11.611C168.858 11.0223 168.602 10.4681 168.174 10.0624C167.747 9.65666 167.18 9.43032 166.59 9.42992Z\",\n    fill: \"#292A2E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_26\",\n    d: \"M171.42 8.92733C171.704 7.38757 170.066 5.79448 167.76 5.36908C165.455 4.94368 163.356 5.84706 163.072 7.38682C162.787 8.92658 164.426 10.5197 166.731 10.9451C169.037 11.3705 171.136 10.4671 171.42 8.92733Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_27\",\n    d: \"M167.867 11.5019C167.458 11.5013 167.051 11.4636 166.649 11.3892C165.516 11.2011 164.462 10.6863 163.616 9.90793C163.246 9.5922 162.962 9.18827 162.789 8.73348C162.616 8.27868 162.561 7.78771 162.628 7.30594C162.738 6.83189 162.964 6.39298 163.288 6.02977C163.612 5.66655 164.021 5.39072 164.48 5.22777C165.552 4.82277 166.715 4.71864 167.842 4.92665C168.969 5.13466 170.018 5.6469 170.875 6.40795C171.245 6.72368 171.53 7.12761 171.702 7.58241C171.875 8.0372 171.93 8.52817 171.863 9.00995C171.754 9.484 171.527 9.9229 171.203 10.2861C170.88 10.6493 170.47 10.9252 170.012 11.0881C169.332 11.3694 168.602 11.5102 167.867 11.5019ZM166.622 5.71463C166.009 5.70684 165.402 5.82292 164.836 6.05588C164.516 6.16311 164.227 6.34853 163.996 6.59538C163.766 6.84222 163.6 7.14269 163.515 7.46958C163.478 7.80535 163.525 8.14506 163.653 8.45795C163.78 8.77083 163.984 9.04701 164.245 9.26149C164.974 9.89792 165.861 10.3264 166.812 10.5021C167.764 10.6778 168.746 10.5942 169.654 10.26C169.974 10.1528 170.263 9.96735 170.494 9.72051C170.724 9.47366 170.89 9.17319 170.975 8.84631C171.012 8.51051 170.965 8.17072 170.838 7.8578C170.71 7.54487 170.507 7.26871 170.245 7.05439C169.528 6.39973 168.635 5.96847 167.676 5.81335C167.329 5.74869 166.976 5.71565 166.623 5.71463H166.622Z\",\n    fill: \"#292A2E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_28\",\n    d: \"M166.725 5.26562L165.819 10.7049L167.156 11.0097L168.278 5.48787L166.725 5.26562Z\",\n    fill: \"#292A2E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_29\",\n    d: \"M172.16 11.1171C172.402 11.1171 172.598 10.9209 172.598 10.6789C172.598 10.4369 172.402 10.2407 172.16 10.2407C171.918 10.2407 171.721 10.4369 171.721 10.6789C171.721 10.9209 171.918 11.1171 172.16 11.1171Z\",\n    fill: \"#292A2E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_30\",\n    d: \"M172.923 8.87391C173.165 8.87391 173.361 8.67773 173.361 8.43573C173.361 8.19374 173.165 7.99756 172.923 7.99756C172.681 7.99756 172.485 8.19374 172.485 8.43573C172.485 8.67773 172.681 8.87391 172.923 8.87391Z\",\n    fill: \"#292A2E\"\n  }))))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgNoOrders);\nexport default __webpack_public_path__ + \"static/media/no-orders.a457a23f8bdc58419d9ac0bce336ca96.svg\";\nexport { ForwardRef as ReactComponent };","import { Link } from \"react-router-dom\";\r\nimport noOrders from \"../../assets/icons/no-orders.svg\";\r\nimport \"./cart-empty.scss\";\r\n\r\nconst CartEmpty = () => {\r\n  return (\r\n    <>\r\n      <p className=\"cart-quantity\">CART</p>\r\n      <div className=\"empty-cart\">\r\n        <img className=\"empty-cart__img\" src={noOrders} alt=\"\" />\r\n        <p className=\"empty-cart__text\">You haven't added any clothes yet</p>\r\n        <Link to=\"/\" className=\"btn\">\r\n          back to recomendations\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartEmpty;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectCart, clearItems } from \"../store/slices/cartSlice\";\r\nimport CartItem from \"../components/cart-item/CartItem\";\r\nimport CartEmpty from \"../components/cart-empty/CartEmpty\";\r\nimport Logo from \"../components/logo/Logo\";\r\nimport Back from \"../components/back/Back\";\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { items, totalPrice, totalCount } = useSelector(selectCart);\r\n  const itemsArr = Object.values(items);\r\n\r\n  return (\r\n    <>\r\n      <Logo />\r\n      <Back />\r\n      {totalCount ? (\r\n        <div className=\"cart\">\r\n          <div className=\"cart__head\">\r\n            <p className=\"cart-quantity\">Cart ({totalCount})</p>\r\n            <button\r\n              onClick={() => dispatch(clearItems())}\r\n              className=\"cart__clear\"\r\n            >\r\n              Clear all\r\n            </button>\r\n          </div>\r\n          <ul className=\"cart__list\">\r\n            {itemsArr.map((item) => (\r\n              <CartItem key={item.id} {...item} />\r\n            ))}\r\n          </ul>\r\n          <div className=\"cart__footer\">\r\n            <div className=\"container\">\r\n              <div className=\"cart__footer-wrapper\">\r\n                <p className=\"price cart__total\">${totalPrice} TOTAL</p>\r\n                <button className=\"btn\">buy now</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <CartEmpty />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"names":["Back","_jsx","Link","className","to","children","Logo","title","src","zabaLogo","alt","width","_ref","id","name","price","image","size","color","count","dispatch","useDispatch","onChangeItemCount","arguments","length","undefined","changeItemCount","item","_jsxs","concat","onClick","style","background","CartEmpty","_Fragment","noOrders","Cart","items","totalPrice","totalCount","useSelector","selectCart","itemsArr","Object","values","clearItems","map","CartItem","_objectSpread"],"sourceRoot":""}